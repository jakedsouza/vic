eyJhbGciOiJIUzI1NiJ9.IyBBZnRlciBhbnkgY2hhbmdlIHRvIHRoaXMgZmlsZSB5b3UgTVVTVCByZS1zaWduIGFuZCBjaGVja2luIHRoZSAuZHJvbmUueW1sLnNpZwojIFdoZW4geW91IGFyZSByZWFkeSB0byBzdWJtaXQgYSBwdWxsIHJlcXVlc3QsIHlvdSBtdXN0IHJlZ2VuZXJhdGUgLmRyb25lLnltbC5zaWcgZm9yIHRoZSB2bXdhcmUvdmljIHJlcG86CiMgJCBkcm9uZSBzaWduIC1zIGh0dHBzOi8vY2kudmNuYS5pbyAtdCAke0RST05FX1RPS0VOfSB2bXdhcmUvdmljCiMKIyBUaGUgc2VjcmV0cyBmaWxlIGlzIGluIG91ciBsb2NhbCBnaXQgcmVwby4gIEFzayBtaGFnZW4gZm9yIGFjY2Vzcy4KCi0tLQp3b3Jrc3BhY2U6CiAgYmFzZTogL2dvCiAgcGF0aDogc3JjL2dpdGh1Yi5jb20vdm13YXJlL3ZpYwoKcGlwZWxpbmU6CiAgY2xvbmU6CiAgICBpbWFnZTogcGx1Z2lucy9naXQKICAgIHRhZ3M6IHRydWUKICAgICMgZG9udCBjbG9uZSBzdWJtb2R1bGVzCiAgICByZWN1cnNpdmU6IGZhbHNlCgogIHdhaXQtZm9yLWJ1aWxkOgogICAgaW1hZ2U6ICR7VEVTVF9CVUlMRF9JTUFHRT1nY3IuaW8vZW1pbmVudC1uYXRpb24tODczMTcvdmljLWludGVncmF0aW9uLXRlc3Q6MS4zMH0KICAgIHB1bGw6IHRydWUKICAgIGVudmlyb25tZW50OgogICAgICBCSU46IGJpbgogICAgICBHT1BBVEg6IC9nbwogICAgICBTSEVMTDogL2Jpbi9iYXNoCiAgICAgIFRFU1RfVVJMX0FSUkFZOiAke1RFU1RfVVJMX0FSUkFZfQogICAgICBEUk9ORV9TRVJWRVI6ICR7RFJPTkVfU0VSVkVSfQogICAgICBEUk9ORV9UT0tFTjogJHtEUk9ORV9UT0tFTn0KICAgIGNvbW1hbmRzOgogICAgICAtIHRlc3RzL3dhaXRfdW50aWxfcHJldmlvdXNfYnVpbGRzX2NvbXBsZXRlLnNoCgogIHZpYy1lbmdpbmU6CiAgICBpbWFnZTogJHtURVNUX0JVSUxEX0lNQUdFPWdjci5pby9lbWluZW50LW5hdGlvbi04NzMxNy92aWMtaW50ZWdyYXRpb24tdGVzdDoxLjMwfQogICAgcHVsbDogdHJ1ZQogICAgZW52aXJvbm1lbnQ6CiAgICAgIEJJTjogYmluCiAgICAgIEdPUEFUSDogL2dvCiAgICAgIFNIRUxMOiAvYmluL2Jhc2gKICAgICAgVEVTVF9VUkxfQVJSQVk6ICAke1RFU1RfVVJMX0FSUkFZfQogICAgICBURVNUX1VTRVJOQU1FOiAgJHtURVNUX1VTRVJOQU1FfQogICAgICBURVNUX1BBU1NXT1JEOiAgJHtURVNUX1BBU1NXT1JEfQogICAgICBCVUlMRF9OVU1CRVI6ICR7RFJPTkVfQlVJTERfTlVNQkVSfQogICAgICBDT01NSVQ6ICR7RFJPTkVfQ09NTUlUfQogICAgY29tbWFuZHM6CiAgICAgIC0gbWFrZSBtYXJrCiAgICAgIC0gbWFrZSAtajMgYWxsCiAgICAgIC0gbWFrZSBzaW5jZW1hcmsKICAgICAgLSBtYWtlIG1hcmsKICAgICAgLSBlY2hvIGBscyB2ZW5kb3IvZ2l0aHViLmNvbS92bXdhcmUvZ292bW9taS92aW0yNS9tZXRob2RzYAogICAgICAtIGVjaG8gYGxzIHZlbmRvci9naXRodWIuY29tL3Ztd2FyZS9nb3Ztb21pL3ZpbTI1L3R5cGVzYAogICAgICAtIGVjaG8gYGxzIHZlbmRvci9naXRodWIuY29tL2RvY2tlci9kb2NrZXIvdmVuZG9yL2dpdGh1Yi5jb20vb3BlbmNvbnRhaW5lcnMvcnVuYy9saWJjb250YWluZXIvc3lzdGVtYAogICAgICAtIGV4cG9ydCBWSUNfRVNYX1VSTF9BUlJBWT0iYHRlc3RzL2dldF90ZXN0X3VybC5zaGAiCiAgICAgIC0gbWFrZSAtajMgdGVzdAogICAgICAtIG1ha2Ugc2luY2VtYXJrCiAgICB3aGVuOgogICAgICBzdGF0dXM6ICBzdWNjZXNzCgogIHZpYy1pbnRlZ3JhdGlvbi10ZXN0LW9uLXByOgogICAgaW1hZ2U6ICR7VEVTVF9CVUlMRF9JTUFHRT1nY3IuaW8vZW1pbmVudC1uYXRpb24tODczMTcvdmljLWludGVncmF0aW9uLXRlc3Q6MS4zMH0KICAgIHB1bGw6IHRydWUKICAgIHByaXZpbGVnZWQ6IHRydWUKICAgIGVudmlyb25tZW50OgogICAgICBCSU46IGJpbgogICAgICBHT1BBVEg6IC9nbwogICAgICBTSEVMTDogL2Jpbi9iYXNoCiAgICAgIExPR19URU1QX0RJUjogaW5zdGFsbC1sb2dzCiAgICAgIEdJVEhVQl9BVVRPTUFUSU9OX0FQSV9LRVk6ICAke0dJVEhVQl9BVVRPTUFUSU9OX0FQSV9LRVl9CiAgICAgIERST05FX1NFUlZFUjogICR7RFJPTkVfU0VSVkVSfQogICAgICBEUk9ORV9UT0tFTjogICR7RFJPTkVfVE9LRU59CiAgICAgIFRFU1RfVVJMX0FSUkFZOiAgJHtURVNUX1VSTF9BUlJBWX0KICAgICAgVEVTVF9VU0VSTkFNRTogICR7VEVTVF9VU0VSTkFNRX0KICAgICAgVEVTVF9QQVNTV09SRDogICR7VEVTVF9QQVNTV09SRH0KICAgICAgVEVTVF9EQVRBU1RPUkU6ICR7VEVTVF9EQVRBU1RPUkV9CiAgICAgIFRFU1RfVElNRU9VVDogJHtURVNUX1RJTUVPVVR9CiAgICAgIFJFUE9SVElOR19TRVJWRVJfVVJMOiAke1JFUE9SVElOR19TRVJWRVJfVVJMfQogICAgICBHT1ZDX0lOU0VDVVJFOiB0cnVlCiAgICAgIEdPVkNfVVNFUk5BTUU6ICAke1RFU1RfVVNFUk5BTUV9CiAgICAgIEdPVkNfUEFTU1dPUkQ6ICAke1RFU1RfUEFTU1dPUkR9CiAgICAgIEdPVkNfREFUQVNUT1JFOiAke1RFU1RfREFUQVNUT1JFfQogICAgICBHU19QUk9KRUNUX0lEOiAke0dTX1BST0pFQ1RfSUR9CiAgICAgIEdTX0NMSUVOVF9FTUFJTDogJHtHU19DTElFTlRfRU1BSUx9CiAgICAgIEdTX1BSSVZBVEVfS0VZOiAke0dTX1BSSVZBVEVfS0VZfQogICAgICBET01BSU46ICR7Q0lfRE9NQUlOfQogICAgY29tbWFuZHM6CiAgICAgIC0gbWFrZSBtYXJrCiAgICAgIC0gdGVzdHMvaW50ZWdyYXRpb24tdGVzdC5zaAogICAgICAtIG1ha2Ugc2luY2VtYXJrCiAgICB3aGVuOgogICAgICBzdGF0dXM6ICBzdWNjZXNzCgoKICB2aWMtdWk6CiAgICBpbWFnZTogJHtURVNUX0JVSUxEX0lNQUdFPWdjci5pby9lbWluZW50LW5hdGlvbi04NzMxNy92aWMtaW50ZWdyYXRpb24tdGVzdDoxLjMwfQogICAgcHVsbDogdHJ1ZQogICAgZW52aXJvbm1lbnQ6CiAgICAgIEJJTjogYmluCiAgICBjb21tYW5kczoKICAgICAgLSBtYWtlIG1hcmsKICAgICAgLSBtYWtlIHZpYy11aS1wbHVnaW5zCiAgICAgIC0gbWFrZSBzaW5jZW1hcmsKICAgIHdoZW46CiAgICAgIHN0YXR1czogIHN1Y2Nlc3MKCiAgYnVuZGxlOgogICAgaW1hZ2U6IGdvbGFuZzoxLjgKICAgIHB1bGw6IHRydWUKICAgIGVudmlyb25tZW50OgogICAgICBCSU46IGJpbgogICAgICBCSU5fVEVNUF9ESVI6IGJpbi92aWMKICAgICAgR09QQVRIOiAvZ28KICAgICAgU0hFTEw6IC9iaW4vYmFzaAogICAgY29tbWFuZHM6CiAgICAgIC0gbWFrZSBtYXJrCiAgICAgIC0gcm0gLXJmICRCSU5fVEVNUF9ESVIKICAgICAgLSBta2RpciAtcCAkQklOX1RFTVBfRElSL3VpCiAgICAgIC0gY3AgLXJmIHVpL2luc3RhbGxlci8qICRCSU5fVEVNUF9ESVIvdWkKICAgICAgLSBjcCBMSUNFTlNFICRCSU5fVEVNUF9ESVIKICAgICAgLSBjcCBkb2MvYnVuZGxlL1JFQURNRSAkQklOX1RFTVBfRElSCiAgICAgIC0gY3AgJEJJTi92aWMtbWFjaGluZSogJEJJTl9URU1QX0RJUgogICAgICAtIGNwICRCSU4vdmljLXVpKiAkQklOX1RFTVBfRElSCiAgICAgIC0gY3AgJEJJTi9hcHBsaWFuY2UuaXNvICRCSU5fVEVNUF9ESVIKICAgICAgLSBjcCAkQklOL2Jvb3RzdHJhcC5pc28gJEJJTl9URU1QX0RJUgogICAgICAtIHRhciBjenZmICRCSU4vdmljXyQkQlVJTERfTlVNQkVSLnRhci5neiAtQyAkQklOIHZpYwogICAgICAtIHNoYXN1bSAtYSAyNTYgJEJJTi92aWNfJCRCVUlMRF9OVU1CRVIudGFyLmd6CiAgICAgIC0gc2hhc3VtIC1hIDEgJEJJTi92aWNfJCRCVUlMRF9OVU1CRVIudGFyLmd6CiAgICAgIC0gbWQ1c3VtICRCSU4vdmljXyQkQlVJTERfTlVNQkVSLnRhci5negogICAgICAtIGR1IC1rcyAkQklOL3ZpY18kJEJVSUxEX05VTUJFUi50YXIuZ3ogfCBhd2sgJ3twcmludCAkMSAvIDEwMjR9JyB8IHsgcmVhZCB4OyBlY2hvICR4IE1COyB9CiAgICAgIC0gbWFrZSBzaW5jZW1hcmsKICAgIHdoZW46CiAgICAgIHJlcG86IHZtd2FyZS92aWMKICAgICAgZXZlbnQ6IFsgcHVzaCwgdGFnIF0KICAgICAgYnJhbmNoOiBbIG1hc3RlciwgcmVsZWFzZXMvKiwgcmVmcy90YWdzLyogXQogICAgICBzdGF0dXM6IHN1Y2Nlc3MKCiAgbm90aWZ5LXNsYWNrOgogICAgaW1hZ2U6IHBsdWdpbnMvc2xhY2sKICAgIHdlYmhvb2s6ICR7U0xBQ0tfVVJMfQogICAgdXNlcm5hbWU6IGRyb25lCiAgICB0ZW1wbGF0ZTogPgogICAgICBidWlsZCBodHRwczovL2NpLnZjbmEuaW8vdm13YXJlL3ZpYy97eyBidWlsZC5udW1iZXIgfX0gZmluaXNoZWQgd2l0aCBhIHt7IGJ1aWxkLnN0YXR1cyB9fSBzdGF0dXMsIGZpbmQgdGhlIGxvZ3MgaGVyZTogaHR0cHM6Ly9jb25zb2xlLmNsb3VkLmdvb2dsZS5jb20vbS9jbG91ZHN0b3JhZ2UvYi92aWMtY2ktbG9ncy9vL2ludGVncmF0aW9uX2xvZ3Nfe3sgYnVpbGQubnVtYmVyIH19X3t7IGJ1aWxkLmNvbW1pdCB9fS56aXA_YXV0aHVzZXI9MQogICAgd2hlbjoKICAgICAgcmVwbzogdm13YXJlL3ZpYwogICAgICBicmFuY2g6IFsgbWFzdGVyLCByZWxlYXNlcy8qLCByZWZzL3RhZ3MvKiBdCiAgICAgIHN0YXR1czogZmFpbHVyZQoKICByZXBvcnQtY292ZXJhZ2U6CiAgICBpbWFnZTogcGx1Z2lucy9jb3ZlcmFnZQogICAgc2VydmVyOiBodHRwczovL2NvdmVyYWdlLnZtd2FyZS5ydW4KICAgIHRva2VuOiAke0dJVEhVQl9BVVRPTUFUSU9OX0FQSV9LRVl9CiAgICBwYXR0ZXJuOiAuY292ZXIvY292ZXIub3V0CiAgICB3aGVuOgogICAgICBicmFuY2g6IFsgbWFzdGVyLCByZWxlYXNlcy8qLCByZWZzL3RhZ3MvKiBdCiAgICAgIHJlcG86IHZtd2FyZS92aWMKICAgICAgc3RhdHVzOiBzdWNjZXNzCg.O6ZNRTook1vo3WANn3rHpx4maDrf_vRJxJbnpcbv_wM